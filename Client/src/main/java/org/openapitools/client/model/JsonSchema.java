/*
 * Spring Boot Rest Server API
 * Made by olokos for purposes of recruitment to ING
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: olokos@wp.pl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AbstractJsonSchemaPropertyObject;
import org.openapitools.client.model.Item;

/**
 * JsonSchema
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class JsonSchema {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private Map<String, AbstractJsonSchemaPropertyObject> properties = null;

  public static final String SERIALIZED_NAME_REQUIRED_PROPERTIES = "requiredProperties";
  @SerializedName(SERIALIZED_NAME_REQUIRED_PROPERTIES)
  private List<String> requiredProperties = null;

  public static final String SERIALIZED_NAME_DEFINITIONS = "definitions";
  @SerializedName(SERIALIZED_NAME_DEFINITIONS)
  private Map<String, Item> definitions = null;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_$_SCHEMA = "$schema";
  @SerializedName(SERIALIZED_NAME_$_SCHEMA)
  private String $schema;


  public JsonSchema title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public JsonSchema description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public JsonSchema properties(Map<String, AbstractJsonSchemaPropertyObject> properties) {
    
    this.properties = properties;
    return this;
  }

  public JsonSchema putPropertiesItem(String key, AbstractJsonSchemaPropertyObject propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, AbstractJsonSchemaPropertyObject>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, AbstractJsonSchemaPropertyObject> getProperties() {
    return properties;
  }


  public void setProperties(Map<String, AbstractJsonSchemaPropertyObject> properties) {
    this.properties = properties;
  }


  public JsonSchema requiredProperties(List<String> requiredProperties) {
    
    this.requiredProperties = requiredProperties;
    return this;
  }

  public JsonSchema addRequiredPropertiesItem(String requiredPropertiesItem) {
    if (this.requiredProperties == null) {
      this.requiredProperties = new ArrayList<String>();
    }
    this.requiredProperties.add(requiredPropertiesItem);
    return this;
  }

   /**
   * Get requiredProperties
   * @return requiredProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getRequiredProperties() {
    return requiredProperties;
  }


  public void setRequiredProperties(List<String> requiredProperties) {
    this.requiredProperties = requiredProperties;
  }


  public JsonSchema definitions(Map<String, Item> definitions) {
    
    this.definitions = definitions;
    return this;
  }

  public JsonSchema putDefinitionsItem(String key, Item definitionsItem) {
    if (this.definitions == null) {
      this.definitions = new HashMap<String, Item>();
    }
    this.definitions.put(key, definitionsItem);
    return this;
  }

   /**
   * Get definitions
   * @return definitions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Item> getDefinitions() {
    return definitions;
  }


  public void setDefinitions(Map<String, Item> definitions) {
    this.definitions = definitions;
  }


  public JsonSchema type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public JsonSchema $schema(String $schema) {
    
    this.$schema = $schema;
    return this;
  }

   /**
   * Get $schema
   * @return $schema
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String get$Schema() {
    return $schema;
  }


  public void set$Schema(String $schema) {
    this.$schema = $schema;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonSchema jsonSchema = (JsonSchema) o;
    return Objects.equals(this.title, jsonSchema.title) &&
        Objects.equals(this.description, jsonSchema.description) &&
        Objects.equals(this.properties, jsonSchema.properties) &&
        Objects.equals(this.requiredProperties, jsonSchema.requiredProperties) &&
        Objects.equals(this.definitions, jsonSchema.definitions) &&
        Objects.equals(this.type, jsonSchema.type) &&
        Objects.equals(this.$schema, jsonSchema.$schema);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, properties, requiredProperties, definitions, type, $schema);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonSchema {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    requiredProperties: ").append(toIndentedString(requiredProperties)).append("\n");
    sb.append("    definitions: ").append(toIndentedString(definitions)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    $schema: ").append(toIndentedString($schema)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

